|top
fpga_clk => fpga_clk.IN2
nrst => main_rst.IN3
FIFO_IO[0] => ~NO_FANOUT~
FIFO_IO[1] => ~NO_FANOUT~
FIFO_IO[2] => ~NO_FANOUT~
FIFO_IO[3] => ~NO_FANOUT~
FIFO_IO[4] => ~NO_FANOUT~
FIFO_IO[5] => ~NO_FANOUT~
FIFO_IO[6] => ~NO_FANOUT~
FIFO_IO[7] => ~NO_FANOUT~
FIFO_RXF => ~NO_FANOUT~
FIFO_TXE => ~NO_FANOUT~
FIFO_PWREN => ~NO_FANOUT~
LED[0] << <GND>
LED[1] << <GND>
LED[2] << <GND>
LED[3] << <GND>
LED[4] << <GND>
LED[5] << <GND>
LED[6] << <GND>
LED[7] << <GND>
FIFO_RD << <GND>
FIFO_WR << <GND>
FIFO_RST << <GND>
audio_clk << <GND>
I2S_word_select << shift_register:I2S_shift_register1.word_select
I2S_data_out << shift_register:I2S_shift_register1.data_out
I2S_clk_out << shift_register:I2S_shift_register1.clk_out


|top|PLL:pll1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk


|top|PLL:pll1|altpll:altpll_component
inclk[0] => PLL_altpll1:auto_generated.inclk[0]
inclk[1] => PLL_altpll1:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|top|PLL:pll1|altpll:altpll_component|PLL_altpll1:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|top|PLL2:pll2
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|top|PLL2:pll2|altpll:altpll_component
inclk[0] => PLL2_altpll:auto_generated.inclk[0]
inclk[1] => PLL2_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|top|PLL2:pll2|altpll:altpll_component|PLL2_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|top|audio_clock_mux:clk_mux
clk_48k => clk_out.DATAA
clk_48k => clk_out.DATAB
clk_88_2k => clk_out.DATAB
clk_96k => clk_out.DATAB
clk_sel[0] => Equal0.IN31
clk_sel[0] => Equal1.IN0
clk_sel[0] => Equal2.IN31
clk_sel[1] => Equal0.IN30
clk_sel[1] => Equal1.IN31
clk_sel[1] => Equal2.IN0
clk_sel[2] => Equal0.IN29
clk_sel[2] => Equal1.IN30
clk_sel[2] => Equal2.IN30
clk_sel[3] => Equal0.IN28
clk_sel[3] => Equal1.IN29
clk_sel[3] => Equal2.IN29
clk_out <= clk_out.DB_MAX_OUTPUT_PORT_TYPE


|top|sample_generator:sample_generator1
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
clk => out[4]~reg0.CLK
clk => out[5]~reg0.CLK
clk => out[6]~reg0.CLK
clk => out[7]~reg0.CLK
clk => out[8]~reg0.CLK
clk => out[9]~reg0.CLK
clk => out[10]~reg0.CLK
clk => out[11]~reg0.CLK
clk => out[12]~reg0.CLK
clk => out[13]~reg0.CLK
clk => out[14]~reg0.CLK
clk => out[15]~reg0.CLK
clk => out[16]~reg0.CLK
clk => out[17]~reg0.CLK
clk => out[18]~reg0.CLK
clk => out[19]~reg0.CLK
clk => out[20]~reg0.CLK
clk => out[21]~reg0.CLK
clk => out[22]~reg0.CLK
clk => out[23]~reg0.CLK
clk => out[24]~reg0.CLK
clk => out[25]~reg0.CLK
clk => out[26]~reg0.CLK
clk => out[27]~reg0.CLK
clk => out[28]~reg0.CLK
clk => out[29]~reg0.CLK
clk => out[30]~reg0.CLK
clk => out[31]~reg0.CLK
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
rst => out.OUTPUTSELECT
seed[0] => out.DATAB
seed[1] => out.DATAB
seed[2] => out.DATAB
seed[3] => out.DATAB
seed[4] => out.DATAB
seed[5] => out.DATAB
seed[6] => out.DATAB
seed[7] => out.DATAB
seed[8] => out.DATAB
seed[9] => out.DATAB
seed[10] => out.DATAB
seed[11] => out.DATAB
seed[12] => out.DATAB
seed[13] => out.DATAB
seed[14] => out.DATAB
seed[15] => out.DATAB
seed[16] => out.DATAB
seed[17] => out.DATAB
seed[18] => out.DATAB
seed[19] => out.DATAB
seed[20] => out.DATAB
seed[21] => out.DATAB
seed[22] => out.DATAB
seed[23] => out.DATAB
seed[24] => out.DATAB
seed[25] => out.DATAB
seed[26] => out.DATAB
seed[27] => out.DATAB
seed[28] => out.DATAB
seed[29] => out.DATAB
seed[30] => out.DATAB
seed[31] => out.DATAB
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[16] <= out[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[17] <= out[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[18] <= out[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[19] <= out[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[20] <= out[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[21] <= out[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[22] <= out[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[23] <= out[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[24] <= out[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[25] <= out[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[26] <= out[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[27] <= out[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[28] <= out[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[29] <= out[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[30] <= out[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[31] <= out[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|sample_processor:sample_processor1
clk => sample_blocks[0][0].CLK
clk => sample_blocks[0][1].CLK
clk => sample_blocks[0][2].CLK
clk => sample_blocks[0][3].CLK
clk => sample_blocks[0][4].CLK
clk => sample_blocks[0][5].CLK
clk => sample_blocks[0][6].CLK
clk => sample_blocks[0][7].CLK
clk => sample_blocks[1][0].CLK
clk => sample_blocks[1][1].CLK
clk => sample_blocks[1][2].CLK
clk => sample_blocks[1][3].CLK
clk => sample_blocks[1][4].CLK
clk => sample_blocks[1][5].CLK
clk => sample_blocks[1][6].CLK
clk => sample_blocks[1][7].CLK
clk => sample_blocks[2][0].CLK
clk => sample_blocks[2][1].CLK
clk => sample_blocks[2][2].CLK
clk => sample_blocks[2][3].CLK
clk => sample_blocks[2][4].CLK
clk => sample_blocks[2][5].CLK
clk => sample_blocks[2][6].CLK
clk => sample_blocks[2][7].CLK
clk => sample_blocks[3][0].CLK
clk => sample_blocks[3][1].CLK
clk => sample_blocks[3][2].CLK
clk => sample_blocks[3][3].CLK
clk => sample_blocks[3][4].CLK
clk => sample_blocks[3][5].CLK
clk => sample_blocks[3][6].CLK
clk => sample_blocks[3][7].CLK
clk => current_block_n[0].CLK
clk => current_block_n[1].CLK
clk => current_block_n[2].CLK
clk => current_block_n[3].CLK
clk => data_ready~reg0.CLK
rst => rst_condition.IN1
data_in[0] => sample_blocks.DATAB
data_in[0] => sample_blocks.DATAB
data_in[0] => sample_blocks.DATAB
data_in[0] => sample_blocks.DATAB
data_in[1] => sample_blocks.DATAB
data_in[1] => sample_blocks.DATAB
data_in[1] => sample_blocks.DATAB
data_in[1] => sample_blocks.DATAB
data_in[2] => sample_blocks.DATAB
data_in[2] => sample_blocks.DATAB
data_in[2] => sample_blocks.DATAB
data_in[2] => sample_blocks.DATAB
data_in[3] => sample_blocks.DATAB
data_in[3] => sample_blocks.DATAB
data_in[3] => sample_blocks.DATAB
data_in[3] => sample_blocks.DATAB
data_in[4] => sample_blocks.DATAB
data_in[4] => sample_blocks.DATAB
data_in[4] => sample_blocks.DATAB
data_in[4] => sample_blocks.DATAB
data_in[5] => sample_blocks.DATAB
data_in[5] => sample_blocks.DATAB
data_in[5] => sample_blocks.DATAB
data_in[5] => sample_blocks.DATAB
data_in[6] => sample_blocks.DATAB
data_in[6] => sample_blocks.DATAB
data_in[6] => sample_blocks.DATAB
data_in[6] => sample_blocks.DATAB
data_in[7] => sample_blocks.DATAB
data_in[7] => sample_blocks.DATAB
data_in[7] => sample_blocks.DATAB
data_in[7] => sample_blocks.DATAB
data_out[0] <= sample_blocks[0][0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= sample_blocks[0][1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= sample_blocks[0][2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= sample_blocks[0][3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= sample_blocks[0][4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= sample_blocks[0][5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= sample_blocks[0][6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= sample_blocks[0][7].DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[16] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[17] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[18] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[19] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[20] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[21] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[22] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[23] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[24] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[25] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[26] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[27] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[28] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[29] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[30] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
data_out[31] <= data_out.DB_MAX_OUTPUT_PORT_TYPE
sample_size[0] => Mux0.IN19
sample_size[0] => Mux1.IN19
sample_size[0] => Mux2.IN19
sample_size[0] => Mux3.IN19
sample_size[0] => Mux4.IN19
sample_size[0] => Mux5.IN19
sample_size[0] => Mux6.IN19
sample_size[1] => Mux0.IN18
sample_size[1] => Mux1.IN18
sample_size[1] => Mux2.IN18
sample_size[1] => Mux3.IN18
sample_size[1] => Mux4.IN18
sample_size[1] => Mux5.IN18
sample_size[1] => Mux6.IN18
sample_size[2] => Mux0.IN17
sample_size[2] => Mux1.IN17
sample_size[2] => Mux2.IN17
sample_size[2] => Mux3.IN17
sample_size[2] => Mux4.IN17
sample_size[2] => Mux5.IN17
sample_size[2] => Mux6.IN17
sample_size[3] => Mux0.IN16
sample_size[3] => Mux1.IN16
sample_size[3] => Mux2.IN16
sample_size[3] => Mux3.IN16
sample_size[3] => Mux4.IN16
sample_size[3] => Mux5.IN16
sample_size[3] => Mux6.IN16
data_available => data_ready.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => sample_blocks.OUTPUTSELECT
data_available => current_block_n.OUTPUTSELECT
data_available => current_block_n.OUTPUTSELECT
data_available => current_block_n.OUTPUTSELECT
data_available => current_block_n.OUTPUTSELECT
data_ready <= data_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|shift_register:I2S_shift_register1
clk => bit_counter_left[0].CLK
clk => bit_counter_left[1].CLK
clk => bit_counter_left[2].CLK
clk => bit_counter_left[3].CLK
clk => bit_counter_left[4].CLK
clk => bit_counter_left[5].CLK
clk => bit_counter_left[6].CLK
clk => bit_counter_left[7].CLK
clk => bit_counter_right[0].CLK
clk => bit_counter_right[1].CLK
clk => bit_counter_right[2].CLK
clk => bit_counter_right[3].CLK
clk => bit_counter_right[4].CLK
clk => bit_counter_right[5].CLK
clk => bit_counter_right[6].CLK
clk => bit_counter_right[7].CLK
clk => current_out.CLK
clk => data_out~reg0.CLK
clk => busy_left~reg0.CLK
clk => busy_right~reg0.CLK
clk => sample_right_r[0].CLK
clk => sample_right_r[1].CLK
clk => sample_right_r[2].CLK
clk => sample_right_r[3].CLK
clk => sample_right_r[4].CLK
clk => sample_right_r[5].CLK
clk => sample_right_r[6].CLK
clk => sample_right_r[7].CLK
clk => sample_left_r[0].CLK
clk => sample_left_r[1].CLK
clk => sample_left_r[2].CLK
clk => sample_left_r[3].CLK
clk => sample_left_r[4].CLK
clk => sample_left_r[5].CLK
clk => sample_left_r[6].CLK
clk => sample_left_r[7].CLK
clk => counter_size[0].CLK
clk => counter_size[1].CLK
clk => counter_size[2].CLK
clk => counter_size[3].CLK
clk => counter_size[4].CLK
clk => counter_size[5].CLK
clk => counter_size[6].CLK
clk => counter_size[7].CLK
clk => clk_out.DATAIN
clk => state~1.DATAIN
sample_left[0] => sample_left_r.DATAA
sample_left[0] => sample_left_r.DATAB
sample_left[1] => sample_left_r.DATAA
sample_left[1] => sample_left_r.DATAB
sample_left[2] => sample_left_r.DATAA
sample_left[2] => sample_left_r.DATAB
sample_left[3] => sample_left_r.DATAA
sample_left[3] => sample_left_r.DATAB
sample_left[4] => sample_left_r.DATAA
sample_left[4] => sample_left_r.DATAB
sample_left[5] => sample_left_r.DATAA
sample_left[5] => sample_left_r.DATAB
sample_left[6] => sample_left_r.DATAA
sample_left[6] => sample_left_r.DATAB
sample_left[7] => sample_left_r.DATAA
sample_left[7] => sample_left_r.DATAB
sample_left[8] => ~NO_FANOUT~
sample_left[9] => ~NO_FANOUT~
sample_left[10] => ~NO_FANOUT~
sample_left[11] => ~NO_FANOUT~
sample_left[12] => ~NO_FANOUT~
sample_left[13] => ~NO_FANOUT~
sample_left[14] => ~NO_FANOUT~
sample_left[15] => ~NO_FANOUT~
sample_left[16] => ~NO_FANOUT~
sample_left[17] => ~NO_FANOUT~
sample_left[18] => ~NO_FANOUT~
sample_left[19] => ~NO_FANOUT~
sample_left[20] => ~NO_FANOUT~
sample_left[21] => ~NO_FANOUT~
sample_left[22] => ~NO_FANOUT~
sample_left[23] => ~NO_FANOUT~
sample_left[24] => ~NO_FANOUT~
sample_left[25] => ~NO_FANOUT~
sample_left[26] => ~NO_FANOUT~
sample_left[27] => ~NO_FANOUT~
sample_left[28] => ~NO_FANOUT~
sample_left[29] => ~NO_FANOUT~
sample_left[30] => ~NO_FANOUT~
sample_left[31] => ~NO_FANOUT~
sample_right[0] => sample_right_r.DATAA
sample_right[0] => sample_right_r.DATAB
sample_right[1] => sample_right_r.DATAA
sample_right[1] => sample_right_r.DATAB
sample_right[2] => sample_right_r.DATAA
sample_right[2] => sample_right_r.DATAB
sample_right[3] => sample_right_r.DATAA
sample_right[3] => sample_right_r.DATAB
sample_right[4] => sample_right_r.DATAA
sample_right[4] => sample_right_r.DATAB
sample_right[5] => sample_right_r.DATAA
sample_right[5] => sample_right_r.DATAB
sample_right[6] => sample_right_r.DATAA
sample_right[6] => sample_right_r.DATAB
sample_right[7] => sample_right_r.DATAA
sample_right[7] => sample_right_r.DATAB
sample_right[8] => ~NO_FANOUT~
sample_right[9] => ~NO_FANOUT~
sample_right[10] => ~NO_FANOUT~
sample_right[11] => ~NO_FANOUT~
sample_right[12] => ~NO_FANOUT~
sample_right[13] => ~NO_FANOUT~
sample_right[14] => ~NO_FANOUT~
sample_right[15] => ~NO_FANOUT~
sample_right[16] => ~NO_FANOUT~
sample_right[17] => ~NO_FANOUT~
sample_right[18] => ~NO_FANOUT~
sample_right[19] => ~NO_FANOUT~
sample_right[20] => ~NO_FANOUT~
sample_right[21] => ~NO_FANOUT~
sample_right[22] => ~NO_FANOUT~
sample_right[23] => ~NO_FANOUT~
sample_right[24] => ~NO_FANOUT~
sample_right[25] => ~NO_FANOUT~
sample_right[26] => ~NO_FANOUT~
sample_right[27] => ~NO_FANOUT~
sample_right[28] => ~NO_FANOUT~
sample_right[29] => ~NO_FANOUT~
sample_right[30] => ~NO_FANOUT~
sample_right[31] => ~NO_FANOUT~
sample_size[0] => Mux0.IN7
sample_size[0] => Mux1.IN7
sample_size[0] => Mux2.IN7
sample_size[0] => Mux3.IN7
sample_size[0] => Decoder0.IN3
sample_size[1] => Mux0.IN6
sample_size[1] => Mux1.IN6
sample_size[1] => Mux2.IN6
sample_size[1] => Mux3.IN6
sample_size[1] => Decoder0.IN2
sample_size[2] => Mux0.IN5
sample_size[2] => Mux1.IN5
sample_size[2] => Mux2.IN5
sample_size[2] => Mux3.IN5
sample_size[2] => Decoder0.IN1
sample_size[3] => Mux0.IN4
sample_size[3] => Mux1.IN4
sample_size[3] => Mux2.IN4
sample_size[3] => Mux3.IN4
sample_size[3] => Decoder0.IN0
start => next_state.START_s.DATAB
start => next_state.IDLE_s.DATAB
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => sample_left_r.OUTPUTSELECT
rst => sample_left_r.OUTPUTSELECT
rst => sample_left_r.OUTPUTSELECT
rst => sample_left_r.OUTPUTSELECT
rst => sample_left_r.OUTPUTSELECT
rst => sample_left_r.OUTPUTSELECT
rst => sample_left_r.OUTPUTSELECT
rst => sample_left_r.OUTPUTSELECT
rst => sample_right_r.OUTPUTSELECT
rst => sample_right_r.OUTPUTSELECT
rst => sample_right_r.OUTPUTSELECT
rst => sample_right_r.OUTPUTSELECT
rst => sample_right_r.OUTPUTSELECT
rst => sample_right_r.OUTPUTSELECT
rst => sample_right_r.OUTPUTSELECT
rst => sample_right_r.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => current_out.OUTPUTSELECT
rst => bit_counter_left[5].ENA
rst => bit_counter_left[4].ENA
rst => bit_counter_left[3].ENA
rst => bit_counter_left[2].ENA
rst => bit_counter_left[1].ENA
rst => bit_counter_left[0].ENA
rst => bit_counter_left[6].ENA
rst => bit_counter_left[7].ENA
rst => bit_counter_right[0].ENA
rst => bit_counter_right[1].ENA
rst => bit_counter_right[2].ENA
rst => bit_counter_right[3].ENA
rst => bit_counter_right[4].ENA
rst => bit_counter_right[5].ENA
rst => bit_counter_right[6].ENA
rst => bit_counter_right[7].ENA
rst => busy_left~reg0.ENA
rst => busy_right~reg0.ENA
busy_right <= busy_right~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy_left <= busy_left~reg0.DB_MAX_OUTPUT_PORT_TYPE
word_select <= current_out.DB_MAX_OUTPUT_PORT_TYPE
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_out <= clk.DB_MAX_OUTPUT_PORT_TYPE


